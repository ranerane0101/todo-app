// Code generated by MockGen. DO NOT EDIT.
// Source: todo_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	valueobject "github.com/ranerane0101/domain/valueobject"
	dto "github.com/ranerane0101/dto"
)

// MockTodoUsecaseInterface is a mock of TodoUsecaseInterface interface.
type MockTodoUsecaseInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTodoUsecaseInterfaceMockRecorder
}

// MockTodoUsecaseInterfaceMockRecorder is the mock recorder for MockTodoUsecaseInterface.
type MockTodoUsecaseInterfaceMockRecorder struct {
	mock *MockTodoUsecaseInterface
}

// NewMockTodoUsecaseInterface creates a new mock instance.
func NewMockTodoUsecaseInterface(ctrl *gomock.Controller) *MockTodoUsecaseInterface {
	mock := &MockTodoUsecaseInterface{ctrl: ctrl}
	mock.recorder = &MockTodoUsecaseInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTodoUsecaseInterface) EXPECT() *MockTodoUsecaseInterfaceMockRecorder {
	return m.recorder
}

// ListTodos mocks base method.
func (m *MockTodoUsecaseInterface) ListTodos(TodoID valueobject.TodoID) ([]dto.TodoDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTodos", TodoID)
	ret0, _ := ret[0].([]dto.TodoDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTodos indicates an expected call of ListTodos.
func (mr *MockTodoUsecaseInterfaceMockRecorder) ListTodos(TodoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTodos", reflect.TypeOf((*MockTodoUsecaseInterface)(nil).ListTodos), TodoID)
}
